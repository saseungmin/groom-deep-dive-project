name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

env:
  CACHED_DEPENDENCY_PATHS: |
    ${{ github.workspace }}/node_modules
    ${{ github.workspace }}/.yarn/cache
  DEFAULT_NODE_VERSION: "v20.12.2"
  DEFAULT_YARN_VERSION: "4.7.0"

jobs:
  job_install_dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Check out current commit (${{ github.sha }})
        uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.DEFAULT_NODE_VERSION }}

      - name: Set up Yarn
        run: |
          corepack enable
          yarn set version ${{ env.DEFAULT_YARN_VERSION }}
          yarn --version

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - name: Compute dependency cache key
        id: compute_lockfile_hash
        run: |
          HASH="${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock', '.yarnrc.yml') }}"
          echo "hash=$HASH" >> $GITHUB_OUTPUT

      - name: Check dependency cache
        uses: actions/cache@v4
        id: cache_dependencies
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ${{ env.CACHED_DEPENDENCY_PATHS }}
          key: ${{ steps.compute_lockfile_hash.outputs.hash }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        if: steps.cache_dependencies.outputs.cache-hit != 'true'
        run: yarn install --immutable

    outputs:
      dependency_cache_key: ${{ steps.compute_lockfile_hash.outputs.hash }}
      yarn_cache_dir_path: |
        ${{ steps.yarn-cache-dir-path.outputs.dir }}
        ${{ env.CACHED_DEPENDENCY_PATHS }}

  continuous-integration:
    needs: [job_install_dependencies]
    runs-on: ubuntu-latest
    steps:
      - name: Check out current commit (${{ github.sha }})
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.DEFAULT_NODE_VERSION }}

      - name: Set up Yarn
        run: |
          corepack enable
          yarn set version ${{ env.DEFAULT_YARN_VERSION }}
          yarn --version

      - name: Check dependency cache
        uses: actions/cache@v4
        with:
          path: ${{ needs.job_install_dependencies.outputs.yarn_cache_dir_path }}
          key: ${{ needs.job_install_dependencies.outputs.dependency_cache_key }}

      - name: Changed Files Lint Check on PR
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          CHANGED_FILES=$(git diff --name-only --diff-filter=d origin/main | grep -E '^app/.*\.(js|jsx|ts|tsx)$' || true)
          if [ ! -z "$CHANGED_FILES" ]; then
            echo "Checking files:"
            echo "$CHANGED_FILES"
            yarn run eslint $CHANGED_FILES
          else
            echo "No app/ directory files changed"
          fi

      - name: Check Unit Test
        run: yarn test:unit:changed-since
